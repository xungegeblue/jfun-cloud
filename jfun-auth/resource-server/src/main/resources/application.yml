server:
  port: 6002

logging.level.org.springframework.security: DEBUG

spring:
  #  datasource:
  #    url: jdbc:log4jdbc:mysql://127.0.0.1:3306/oauth2?useUnicode=true&characterEncoding=utf-8
  #    username: root
  #    password: root
  #    driver-class-name: net.sf.log4jdbc.DriverSpy

#  jpa:
#    hibernate:
#      ddl-auto: none

#logging:
#  level:
#    jdbc: error
#    jdbc.sqltiming: info
security:
  oauth2:
    client:
      client-id: client_1
      client-secret: 123456
      access-token-uri: http://localhost:6001/oauth/token
      user-authorization-uri: http://localhost:6001/oauth/authorize
    resource:
      token-info-uri: http://localhost:6001/oauth/check_token
      prefer-token-info: true
      filter-order: 3 #则使用spring security的控制，反之则为oauth2的控制
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO